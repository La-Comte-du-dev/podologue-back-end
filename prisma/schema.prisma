// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  username   String   @unique @db.VarChar(255)
  email      String   @unique @db.VarChar(255)
  password   String   @db.VarChar(255)
  created_at DateTime @default(now())
  role       String   @default("User")
}

model Patient {
  id           Int           @id @default(autoincrement())
  firstname    String        @db.VarChar(255)
  lastname     String        @db.VarChar(255)
  adress1      String        @db.VarChar(255)
  adress2      String?       @db.VarChar(255)
  zipcode      String        @db.VarChar(5)
  city         String        @db.VarChar(255)
  email        String?       @unique @db.VarChar(255)
  phone        String?       @db.VarChar(10)
  appointments Appointment[]
}

model CareType {
  id            Int    @id @default(autoincrement())
  name          String @db.VarChar(255)
  caretypeprice Int?
  Cares         Care[]
}

model Care {
  id                  Int                   @id @default(autoincrement())
  name                String                @db.VarChar(255)
  careprice           Int?
  caretype            CareType              @relation(fields: [caretypeId], references: [id])
  caretypeId          Int
  CaresOnAppointments CaresOnAppointments[]
}

model Appointment {
  id                  Int                   @id @default(autoincrement())
  date                DateTime              @db.DateTime
  facture             String                @db.VarChar(255)
  isquotation         Boolean               @default(false)
  Patient             Patient?              @relation(fields: [patientId], references: [id])
  patientId           Int
  CaresOnAppointments CaresOnAppointments[]
}

model CaresOnAppointments {
  appointment   Appointment @relation(fields: [appointmentId], references: [id])
  appointmentId Int
  care          Care        @relation(fields: [careId], references: [id])
  careId        Int

  @@id([appointmentId, careId])
}

model Log {
  id        Int          @id @default(autoincrement())
  source    SourceEnum
  category  CategoryEnum
  component String       @db.VarChar(255)
  message   String       @db.VarChar(255)
  error     String       @db.VarChar(255)
  date      DateTime     @default(now())
}

enum SourceEnum {
  FRONT
  BACK
}

enum CategoryEnum {
  DEBUG
  INFO
  DEFAULT
  WARNING
  ERROR
}
